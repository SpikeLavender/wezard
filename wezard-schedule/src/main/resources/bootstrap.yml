# Mysql数据库连接配置: com.mysql.cj.jdbc.Driver
server:
  port: 8098

spring:
  application:
    name: wezard-schedule
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR}
        namespace: 7b456865-351d-404d-abef-fe7fc52a5e6b
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        namespace: ${spring.cloud.nacos.discovery.namespace}
        group: DEFAULT_GROUP
        file-extension: yaml
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 #sentinel dashboard/console address
        port: 8719  #  sentinel会在该端口启动http server，那么这样的话，控制台定义的一些限流等规则才能发送传递过来，
        #如果8719端口被占用，那么会依次+1
        # Sentinel Nacos数据源配置，Nacos中的规则会自动同步到sentinel流控规则中
      datasource:
        flow:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-flow-rules
            namespace: ${spring.cloud.nacos.discovery.namespace}
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
        degrade:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-degrade-rules
            namespace: ${spring.cloud.nacos.discovery.namespace}
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: degrade
  main:
    allow-bean-definition-overriding: true

# 健康检查
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

dubbo:
  registry:
    address: spring-cloud://localhost
  cloud:
    subscribed-services: wezard-db-adapter
  consumer:
    timeout: 200000

# 定时任务配置
scheduled:
  week:
    fixedRate: 600000 # ms, 10 min
    interval: 10
    cron: "0 */30 * * * ?"  # 30 min
  month:
    fixedRate: 600000 # ms, 10 min
    interval: 10
    cron: "0 */30 * * * ?"  # 30 min
