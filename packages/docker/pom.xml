<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>packages</artifactId>
		<groupId>com.natsumes.wezard</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<packaging>pom</packaging>
	<artifactId>docker</artifactId>
	<name>Docker Images</name>
	<description>Docker Images</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<wezard.project.version>${project.version}</wezard.project.version>
		<docker.skip>false</docker.skip>
		<docker.skip.build>false</docker.skip.build>
		<docker.skip.push>false</docker.skip.push>
		<docker.pull.registry>www.natsumes.com:30443</docker.pull.registry>
		<docker.push.registry>www.natsumes.com:30443</docker.push.registry>
		<docker.registry.username>admin</docker.registry.username>
		<docker.registry.password>Harbor12345</docker.registry.password>
		<docker.image.prefix>wezard</docker.image.prefix>
		<docker.push.phase>deploy</docker.push.phase>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.natsumes.wezard</groupId>
			<artifactId>wezard-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.natsumes.wezard</groupId>
			<artifactId>wezard-pay</artifactId>
		</dependency>
		<dependency>
			<groupId>com.natsumes.wezard</groupId>
			<artifactId>wezard-db-adapter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.natsumes.wezard</groupId>
			<artifactId>wezard-gateway</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>
				<configuration>
					<verbose>true</verbose>
					<dockerHost>tcp://123.207.218.247:2375</dockerHost>
					<apiVersion>1.23</apiVersion>
					<pullRegistry>${docker.pull.registry}</pullRegistry>
					<pushRegistry>${docker.push.registry}</pushRegistry>
					<authConfig>
						<push>
							<username>${docker.registry.username}</username>
							<password>${docker.registry.password}</password>
						</push>
					</authConfig>
					<images>
						<image>
							<name>${docker.image.prefix}/wezard-server</name>
							<!--别名:用于容器命名和在docker-compose.yml文件只能找到对应名字的配置-->
<!--							<alias>${project.name}</alias>-->
							<!--镜像build相关配置-->
							<build>
								<cleanup>try</cleanup>
								<!--使用dockerFile文件-->
								<dockerFile>docker-files/Dockerfile.wezard-app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<assembly>
									<inline>
										<dependencySets>
											<dependencySet>
												<includes>
													<include>com.natsumes.wezard:wezard-server</include>
												</includes>
												<outputFileNameMapping>app.jar</outputFileNameMapping>
											</dependencySet>
										</dependencySets>
									</inline>
								</assembly>
							</build>
						</image>
						<image>
							<name>${docker.image.prefix}/wezard-pay</name>
							<!--别名:用于容器命名和在docker-compose.yml文件只能找到对应名字的配置-->
							<!--镜像build相关配置-->
							<build>
								<cleanup>try</cleanup>
								<!--使用dockerFile文件-->
								<dockerFile>docker-files/Dockerfile.wezard-app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<assembly>
									<inline>
										<dependencySets>
											<dependencySet>
												<includes>
													<include>com.natsumes.wezard:wezard-pay</include>
												</includes>
												<outputFileNameMapping>app.jar</outputFileNameMapping>
											</dependencySet>
										</dependencySets>
									</inline>
								</assembly>
							</build>
						</image>
						<image>
							<name>${docker.image.prefix}/wezard-db-adapter</name>
							<!--镜像build相关配置-->
							<build>
								<cleanup>try</cleanup>
								<!--使用dockerFile文件-->
								<dockerFile>docker-files/Dockerfile.wezard-app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<assembly>
									<inline>
										<dependencySets>
											<dependencySet>
												<includes>
													<include>com.natsumes.wezard:wezard-db-adapter</include>
												</includes>
												<outputFileNameMapping>app.jar</outputFileNameMapping>
											</dependencySet>
										</dependencySets>
									</inline>
								</assembly>
							</build>
						</image>
						<image>
							<name>${docker.image.prefix}/wezard-gateway</name>
							<!--镜像build相关配置-->
							<build>
								<cleanup>try</cleanup>
								<!--使用dockerFile文件-->
								<dockerFile>docker-files/Dockerfile.wezard-app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<assembly>
									<inline>
										<dependencySets>
											<dependencySet>
												<includes>
													<include>com.natsumes.wezard:wezard-gateway</include>
												</includes>
												<outputFileNameMapping>app.jar</outputFileNameMapping>
											</dependencySet>
										</dependencySets>
									</inline>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>clean-images</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>remove</goal>
						</goals>
						<configuration>
							<removeAll>true</removeAll>
						</configuration>
					</execution>

					<execution>
						<id>generate-images</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>

					<execution>
						<id>push-images</id>
						<phase>deploy</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<image>${docker.image.prefix}/wezard-server,${docker.image.prefix}/wezard-pay,${docker.image.prefix}/wezard-db-adapter,${docker.image.prefix}/wezard-gateway</image>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

