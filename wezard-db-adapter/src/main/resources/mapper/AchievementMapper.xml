<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.natsumes.wezard.mapper.AchievementMapper">
  <resultMap id="BaseResultMap" type="com.natsumes.wezard.pojo.Achievement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
    <result column="achievement" jdbcType="DECIMAL" property="achievement" />
    <result column="self_achievement" jdbcType="DECIMAL" property="selfAchievement" />
    <result column="sub_achievement" jdbcType="DECIMAL" property="subAchievement" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, parent_id, level, profit, achievement, self_achievement, sub_achievement, 
    start_time, end_time, complete_time, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_achievement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_achievement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.natsumes.wezard.pojo.Achievement">
    insert into tb_achievement (id, user_id, parent_id, 
      level, profit, achievement, 
      self_achievement, sub_achievement, start_time, 
      end_time, complete_time, status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{profit,jdbcType=DECIMAL}, #{achievement,jdbcType=DECIMAL}, 
      #{selfAchievement,jdbcType=DECIMAL}, #{subAchievement,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.natsumes.wezard.pojo.Achievement">
    insert into tb_achievement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="achievement != null">
        achievement,
      </if>
      <if test="selfAchievement != null">
        self_achievement,
      </if>
      <if test="subAchievement != null">
        sub_achievement,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="achievement != null">
        #{achievement,jdbcType=DECIMAL},
      </if>
      <if test="selfAchievement != null">
        #{selfAchievement,jdbcType=DECIMAL},
      </if>
      <if test="subAchievement != null">
        #{subAchievement,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.natsumes.wezard.pojo.Achievement">
    update tb_achievement
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="achievement != null">
        achievement = #{achievement,jdbcType=DECIMAL},
      </if>
      <if test="selfAchievement != null">
        self_achievement = #{selfAchievement,jdbcType=DECIMAL},
      </if>
      <if test="subAchievement != null">
        sub_achievement = #{subAchievement,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null and status != 0">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.natsumes.wezard.pojo.Achievement">
    update tb_achievement
    set user_id = #{userId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      profit = #{profit,jdbcType=DECIMAL},
      achievement = #{achievement,jdbcType=DECIMAL},
      self_achievement = #{selfAchievement,jdbcType=DECIMAL},
      sub_achievement = #{subAchievement,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<update id="updateBatchSelective" parameterType="List">
		update tb_achievement
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="user_id =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.userId!=null">
						when id=#{i.id} then #{i.userId}
					</if>
				</foreach>
			</trim>
			<trim prefix="parent_id =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.parentId!=null">
						when id=#{i.id} then #{i.parentId}
					</if>
				</foreach>
			</trim>
			<trim prefix="level =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.level!=null">
						when id=#{i.id} then #{i.level}
					</if>
				</foreach>
			</trim>
			<trim prefix="profit =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.profit!=null">
						when id=#{i.id} then #{i.profit}
					</if>
				</foreach>
			</trim>
			<trim prefix="achievement =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.achievement!=null">
						when id=#{i.id} then #{i.achievement}
					</if>
				</foreach>
			</trim>
			<trim prefix="self_achievement =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.selfAchievement!=null">
						when id=#{i.id} then #{i.selfAchievement}
					</if>
				</foreach>
			</trim>
			<trim prefix="sub_achievement =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.subAchievement!=null">
						when id=#{i.id} then #{i.subAchievement}
					</if>
				</foreach>
			</trim>
			<trim prefix="start_time =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.startTime!=null">
						when id=#{i.id} then #{i.startTime}
					</if>
				</foreach>
			</trim>
			<trim prefix="end_time =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.endTime!=null">
						when id=#{i.id} then #{i.endTime}
					</if>
				</foreach>
			</trim>
			<trim prefix="status =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.status!=null and i.status!=0">
						when id=#{i.id} then #{i.status}
					</if>
				</foreach>
			</trim>
		</trim>
		where
		<foreach collection="list" separator="or" item="i" index="index">
			id=#{i.id}
		</foreach>
	</update>
	<update id="insertBatch" parameterType="list">
		insert into tb_achievement (id, user_id, parent_id,
		level, profit, achievement, self_achievement,
		sub_achievement, start_time, end_time
		)
		values
		<foreach collection="list" item="achievement" index="index" separator=",">
			(#{achievement.id,jdbcType=INTEGER}, #{achievement.userId,jdbcType=INTEGER},
			#{achievement.parentId,jdbcType=INTEGER},
			#{achievement.level,jdbcType=INTEGER}, #{achievement.profit,jdbcType=DECIMAL},
			#{achievement.achievement,jdbcType=DECIMAL},
			#{achievement.selfAchievement,jdbcType=DECIMAL}, #{achievement.subAchievement,jdbcType=DECIMAL},
			#{achievement.startTime,jdbcType=TIMESTAMP}, #{achievement.endTime,jdbcType=TIMESTAMP}
			)
		</foreach>
		ON DUPLICATE KEY UPDATE
		level = values(level),
		profit = values(profit),
		achievement = values(achievement),
		self_achievement = values(self_achievement),
		sub_achievement = values(sub_achievement)
	</update>
	<insert id="replaceBatch" parameterType="list">
		replace into tb_achievement (id, user_id, parent_id,
		level, profit, achievement, self_achievement,
		sub_achievement, start_time, end_time
		)
		values
		<foreach collection="list" item="achievement" index="index"
		         separator=",">
			(#{achievement.id,jdbcType=INTEGER}, #{achievement.userId,jdbcType=INTEGER},
			#{achievement.parentId,jdbcType=INTEGER},
			#{achievement.level,jdbcType=INTEGER}, #{achievement.profit,jdbcType=DECIMAL},
			#{achievement.achievement,jdbcType=DECIMAL},
			#{achievement.selfAchievement,jdbcType=DECIMAL}, #{achievement.subAchievement,jdbcType=DECIMAL},
			#{achievement.startTime,jdbcType=TIMESTAMP}, #{achievement.endTime,jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>
	<select id="selectByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from tb_achievement
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
</mapper>